buildscript {
    ext {

        // LIBRARIES
        rxjava_version = "1.2.2"
        rxjava2_version = "2.0.1"

        // TESTING
        junit_version = "4.12"
        assertj_version = "2.5.0"

        // INFRASTRUCTURE
    }

    ext.libraries = [//LIBRARIES

                     rxjava              : "io.reactivex:rxjava:$rxjava_version",
                     rxjava2             : "io.reactivex.rxjava2:rxjava:$rxjava2_version",
                     assertj             : "org.assertj:assertj-core:$assertj_version",

                     // TESTING
                     junit               : "junit:junit:$junit_version",

    ]

    repositories {
        jcenter()
        mavenCentral()
        maven { url "https://jitpack.io" }
        maven { url "https://oss.sonatype.org/content/repositories/snapshots" }
        maven { url "https://maven.fabric.io/public" }
        maven { url "http://repository.jetbrains.com/all" }

    }
}

allprojects {
    apply plugin: 'java'
    apply plugin: 'jacoco'

    sourceCompatibility = 1.6
    targetCompatibility = 1.6

    repositories {
        jcenter()
        mavenCentral()
        maven { url "https://jitpack.io" }
        maven { url "https://maven.fabric.io/public" }
        maven { url "http://repository.jetbrains.com/all" }
        maven { url "https://oss.sonatype.org/content/repositories/snapshots" }
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

task codeCoverageReport(type: JacocoReport) {
    executionData fileTree(project.rootDir.absolutePath).include("**/build/jacoco/*.exec")

    subprojects.each {
        sourceSets it.sourceSets.main
    }

    reports {
        xml.enabled true
        xml.destination "${buildDir}/reports/jacoco/report.xml"
        html.enabled false
        csv.enabled false
    }
}

codeCoverageReport.dependsOn {
    subprojects*.test
}